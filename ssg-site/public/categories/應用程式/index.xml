<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>應用程式 on Mainroad</title>
    <link>/categories/%E6%87%89%E7%94%A8%E7%A8%8B%E5%BC%8F/</link>
    <description>Recent content in 應用程式 on Mainroad</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-tw</language>
    <lastBuildDate>Sun, 20 May 2018 21:42:37 +0000</lastBuildDate>
    
	<atom:link href="/categories/%E6%87%89%E7%94%A8%E7%A8%8B%E5%BC%8F/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Hexo教學（5）－Material 主題設定</title>
      <link>/post/2018-05-20-hexo%E6%95%99%E5%AD%B8-5-material-%E4%B8%BB%E9%A1%8C%E8%A8%AD%E5%AE%9A/</link>
      <pubDate>Sun, 20 May 2018 21:42:37 +0000</pubDate>
      
      <guid>/post/2018-05-20-hexo%E6%95%99%E5%AD%B8-5-material-%E4%B8%BB%E9%A1%8C%E8%A8%AD%E5%AE%9A/</guid>
      <description>自建 Blog 其中一種樂趣就是可以換很多種風格迥異的主題，不過仍需要一點程式基礎才能做好設定，接下來會以 Hexo 排名第二的主題 - Material 來做說明
 下載主題與更名設定檔 Hexo 只需要將主題文件放置於站點目錄的 themes 目錄下。從 Github 下載最新版本。並更名為material
資料夾可任意更名，但_config.yml的設定需同資料夾名稱
第一次啟用時需先將 material 內的 _config.template.yml 更名為 _config.yml
如何變更主題 先理解兩個名詞
 站點配置文件
 站點目錄下的 _config.yml
 主題配置文件
 material 資料夾下的 _config.yml
開啟站點配置文件，更改 language 與 theme 設定
語系支援清單
 العَرَبِيَّة (ar) Deutsch (de) English (en) Español (es) Français (fr) 日本語 (ja) Malay (ms) Portuguese (Brazil) (pt-BR) 简体中文 (zh-CN) 繁體中文 (zh-TW)  language: zh-TW  theme: material  為什麼選擇 Material  真的很潮，Material Design 真的很潮，讓人印象深刻。 完整的文件說明，說明連結 整合眾多功能，整合了回覆留言、標籤、分類、時間軸、站內搜尋、 QR Code 等功能  Material 主題設定 接下來主題配置文件的設定</description>
    </item>
    
    <item>
      <title>Hexo（4）－部署到 GitHub Pages</title>
      <link>/post/2018-05-20-hexo%E6%95%99%E5%AD%B8-4-%E9%83%A8%E7%BD%B2%E5%88%B0-github-pages/</link>
      <pubDate>Sun, 20 May 2018 17:42:07 +0000</pubDate>
      
      <guid>/post/2018-05-20-hexo%E6%95%99%E5%AD%B8-4-%E9%83%A8%E7%BD%B2%E5%88%B0-github-pages/</guid>
      <description>Hexo 產生的靜態網誌預設可以本機執行，但若要讓大家看看到勢必要部署到外部網路空間，由於是靜態網站部署到哪個網頁空間都不成問題，本文是建議部署到 GitHub Pages 上，以下就一步步說明步驟。
 部署說明 Hexo 預設可以支援以下部署方式
 Git Heroku Rsync OpenShift FTPSync SFTP 手動 Copy public 資料夾  本文使用 Git 部署，需先安裝 hexo-deployer-git 套件
其他部署方式請參考 Hexo部署
$ npm install hexo-deployer-git --save  GitHub Pages 設定 到 GitHub 上新增一個 repo，名稱必須是 {username}.github.io
設定 _config.yml deploy: type: git repo: https://&amp;lt;username&amp;gt;:&amp;lt;password&amp;gt;@github.com/&amp;lt;username&amp;gt;/&amp;lt;username&amp;gt;.github.io.git branch: master  repo 有幾種驗證方式可以 push 到 Github，這裡選擇最簡單的自帶帳密的方式。
若有多組 Git 部署可以參考以下設定
deploy: type: git repo: github: https://github.com/&amp;lt;username&amp;gt;/&amp;lt;username&amp;gt;.github.io.git,master gitcafe: https://gitcafe.com/&amp;lt;username&amp;gt;/&amp;lt;username&amp;gt;.git,gitcafe-pages  若是多種部署方式可參考以下設定</description>
    </item>
    
    <item>
      <title>Hexo（3）－基本設定</title>
      <link>/post/2018-05-10-hexo%E6%95%99%E5%AD%B8-3-%E5%9F%BA%E6%9C%AC%E8%A8%AD%E5%AE%9A/</link>
      <pubDate>Thu, 10 May 2018 16:37:52 +0000</pubDate>
      
      <guid>/post/2018-05-10-hexo%E6%95%99%E5%AD%B8-3-%E5%9F%BA%E6%9C%AC%E8%A8%AD%E5%AE%9A/</guid>
      <description>有了第一個自己的 Blog，也順利的產身第一篇文章，接下來我們來做一些設定，讓 Blog 更量身打造一些。
 請打開目錄下的_config.yaml，我們一步步調整。
Site 設定 Site 是 Blog 的基本資訊，請修改基本的資訊上去。
# Site title: Hexo subtitle: description: keywords: author: John Doe language: timezone:  URL 設定 # URL ## If your site is put in a subdirectory, set url as &#39;http://yoursite.com/child&#39; and root as &#39;/child/&#39; url: https://raychiutw.github.io root: / permalink: :year/:month/:day/:title/ permalink_defaults:   url：Blog 的網址。 root：若網站有子目錄記得修改。&#39;http://yoursite.com/child&#39; and root as &#39;/child/&#39; permalink：若有 SEO 考量，可改為更簡短的設定  Directory 設定 # Directory source_dir: source public_dir: public tag_dir: tags archive_dir: archives category_dir: categories code_dir: downloads/code i18n_dir: :lang skip_render:  本區使用預設值即可</description>
    </item>
    
    <item>
      <title>Hexo教學（0）－目錄</title>
      <link>/post/2018-05-01-hexo%E6%95%99%E5%AD%B8-0-%E7%9B%AE%E9%8C%84/</link>
      <pubDate>Tue, 01 May 2018 09:28:34 +0000</pubDate>
      
      <guid>/post/2018-05-01-hexo%E6%95%99%E5%AD%B8-0-%E7%9B%AE%E9%8C%84/</guid>
      <description> Hexo 是一個網誌框架。使用 Markdown 解析文章，透過主題產生靜態檔案。
  {% post_link Hexo教學-1-快速安裝 Hexo教學（1）－快速安裝 %} {% post_link Hexo教學-2-建立第一篇文章 Hexo教學（2）－建立第一篇文章 %} {% post_link Hexo教學-3-基本設定 Hexo教學（3）－基本設定 %} {% post_link Hexo教學-4-部署到-GitHub-Pages Hexo教學（4）－部署到 GitHub Pages %} {% post_link Hexo教學-5-Material-主題設定 Hexo教學（5）－Material 主題設定 %} Hexo教學（6）－Material 程式碼高亮 Hexo教學（7）－Material 整合功能 Hexo教學（8）－Material RSS QRCode 站內搜尋 Hexo教學（9）－Sitemap.xml 與 robot.txt  </description>
    </item>
    
    <item>
      <title>Hexo教學（2）－第一篇文章</title>
      <link>/post/2018-04-29-hexo%E6%95%99%E5%AD%B8-2-%E5%BB%BA%E7%AB%8B%E7%AC%AC%E4%B8%80%E7%AF%87%E6%96%87%E7%AB%A0/</link>
      <pubDate>Sun, 29 Apr 2018 15:52:38 +0000</pubDate>
      
      <guid>/post/2018-04-29-hexo%E6%95%99%E5%AD%B8-2-%E5%BB%BA%E7%AB%8B%E7%AC%AC%E4%B8%80%E7%AF%87%E6%96%87%E7%AB%A0/</guid>
      <description>  快速建立第一個 Bolg 之後,接下當然是來產生第一篇文章
 用指令產生文章 ， Hexo new &amp;ldquo;文章名稱&amp;rdquo; 可以快速產生一個 markdown 出來 ，產生的檔案放在 /source/post/ 下
npm new first-post  產生靜態檔 還記得上篇說提, Hexo 是將 markdown 產生靜態 html 的框架 有了 markdown 後, 那就讓我們來產生靜態檔吧
$ hexo generate  或者
$ hexo g  檢查 /public/ 下是否有剛剛那篇的 html 了呢？
讓我們再去看看 http://localhost:4000 是否有新文章了
 其他相關教學請參考{% post_link Hexo教學-0-目錄 系列文章目錄 %}
 </description>
    </item>
    
    <item>
      <title>Hexo教學（1）－快速安裝</title>
      <link>/post/2018-04-29-hexo%E6%95%99%E5%AD%B8-1-%E5%BF%AB%E9%80%9F%E5%AE%89%E8%A3%9D/</link>
      <pubDate>Sun, 29 Apr 2018 12:27:49 +0000</pubDate>
      
      <guid>/post/2018-04-29-hexo%E6%95%99%E5%AD%B8-1-%E5%BF%AB%E9%80%9F%E5%AE%89%E8%A3%9D/</guid>
      <description>  那我們就開始吧。
 安裝 Node.js 下載Node.js
安裝 Hexo $ npm install -g hexo-cli
建立第一個 Blog 請在想要的目錄下打開命令列視窗
 $ hexo init myblog $ cd myblog $ npm install 
執行站台  $ hexo server 
或者
$ hexo s  在瀏覽器輸入 http://localhost:4000 有看到下圖就成功建立第一個部落格站囉
 其他相關教學請參考{% post_link Hexo教學-0-目錄 系列文章目錄 %}
 </description>
    </item>
    
  </channel>
</rss>